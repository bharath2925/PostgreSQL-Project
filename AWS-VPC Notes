--------VPC---------
What is a VPC?
- Amazon Virtual Private Cloud lets you provision a logically isolated section of AWS cloud where you can launch AWS resources in a virtual 
  network you define.
- You have complete control over your virtual networking environment, including selecting your own IP range, creating of subnets ,configuration
  of route tables and network gateways.
- You can easily customize your network config of your vpc. For ex: You can create public facing subnet for your webservers that has access 
  to the internet and place your backend systens such as databases and app servers in a private facing subnet with no internet access.
-You can leverage multiple layers of security , including security groups and network access control lists, to help control access to ec2 in each subnet.
-YOu can also create a Hardware VPC connection between your corporate datacenter and your VPC and leverage the aws cloud as an extension 
  of your corporate datacenter
  
  
What can we do with VPC?
- Launch instances into your subnet of your choosing.
- Assing custom IP address ranges in each subnet.
- Configure route tables between subnets.
- Create internet gateways and attach it to your VPC.
- Much better security control of your AWS resources.
- Assign SG to each instances.
- Have Subnet network access control lists

Difference between default VPC and custom VPC.
- DVPC is user friendly, no networking knowledge needed, allowing to immediately deploy instances.
- All subnets in default VPC have a route out to the internet.
- By default, Each EC2 has a public and a private address.

VPC Peering: 
- Allows you to connect one VPC to another via a direct network route using private IP addresses.
- Instances behave as if they were on the same private network.
- You can peer VPC with other AWS accounts as well as other VPC's in the same account.
- You can peer between regions
- Peering is a star configuration, ie 1 VPC peers with 4 others. No Transitive Peering.

***Think of VPC as a logical Datacenter in AWS.
It consists of Internet Gateways(IGW's)/Virtual Private Gateways, Route tables, Network Access control lists, subnets and security groups.
1subnet can be speard in 1 az only. multiple subnets can be in 1 az. but 1 subnet cant be in multiple az.
Network ACL's are Stateless, which means you can allow rules and deny rules for ex if we add a inbound rule for a port we will have to add 
  an outbound rule for that port. in Security groups this is done by default making them stateful.
In VPC there is no Transitive Peering. Think of it like this:
      
          VPC-D
            ^
            |
VPC-A <-> VPC-B <-> VPC-E
            |
            ^
          VPC-C
Here VPC B is peered with A,C,D,E. But if A wants to communicate with D, It cannot communicate via B. This is called Transitive Peering.
This is NOT ALLOWED in VPC's. To communicate, We need to connect A and D in a separate connection.

----VPC Lab Notes----
Steps while creating a VPC:
1. Create VPC:
  Tag is the name of the VPC.
  IPv4 CIDR Block: is the ipv4 address range to select.This uses CIDR block representation.
  CIDR: it looks like this: 10.43.0.0/24
  In an ip address a.b.c.d a,b,c,d are having each memory of 8 bits. so when we say /24. it means that first 3 parts (24/8) of ip, here
  a,b,c are fixed. and only the last .0 is variable here. making it 2pow(8) = 256 unique ip addresses range.
  Tenancy: default means all the vpc will be on shared hardware. but dedicated is a separate hardware for your entire VPC(Costly)
-when we create the vpc, it does not automatically create a subnet but it creates a route table,Network ACL and Security Group
-So basically the default created VPC would be like this:
            SG<-NetworkACL<-RouteTable<-Router

-In order to create a VPC, we first need to create a subnet
2. Create Subnets:
  Tag is the name give to the vpc. Its good practice to mention the AZ in the tag name of the vpc.
  **There can be only 1 subnet per 1 az
  we can mention the ipv4 range we want for this subnet. it should branch from the range provided while creating the vpc.
  -by default, subnets are No for auto assign publicly accessible IP address. We need to go to actions and enable that.
    this would give access to internet.
 -The next step would be to give internet access to our vpc. this is done by creating internet gateways
3. Create Internet Gateways.
  We give name to the IGW and once we create it, its detached. we need to attach it to a VPC. 
  -Remmember we can have only ONE internet gateway per VPC.
-Once we create the IGW. We need to configure our route tables

4. Configure Route Tables:
  -We can see our default route table created while creating the VPC, things to note:
    -The route has the generic ip range provided while creating VPC, this means our subnets can communicate to each other.
    -This is a security concern as every subnet we create by default is public, to avoid this we usually have main route table 
     for private subnet and a separate route table for public subnets.
   -Create Route Table: We give a name and associate the vpc for that route table. 
    Once the Route table is created. We go to route and edit routes. we add 0.0.0.0/0 and select internet gateway for target.
    we can see the igw we created in the drop down.
   -Once the route table is created with igw. we need to associate the public subnet to this route table.
This completes the VPC set up.Next, we need to setup ec2 instances in our public and private subnets.

The next step is to create EC2 instances. While configuring EC2, we need to select the vpc we created with the public subnet(while creating public ec2)
Note that SG does not span over vpc. when we create a new vpc we would need to create a new sg or use the default one.
We shal create 2 ec2 instances one for public and one for private. 
while creating the ec2 for private. it is necessary to have a custom SG for this ec2. so its better to create a new sg for private subnet ec2's






