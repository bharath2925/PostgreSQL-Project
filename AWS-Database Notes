AWS Databases

-----Databases 101---------


Amazon RDS has 2 main features:
1. Multi AZ: For Disaster Recovery
  -For ex: Lets say an AWS RDS is connecting to a primary DB using a DNS(Domain Name System) address
  -If we loose our primary db, Amazon would detect and would assign to point the DNS to secondary db(secondary ip address)
2. Read Replicas: for better performance
  -For ex: Lets say an AWS RDS is connecting to a primary DB using a DNS(Domain Name System) address
  -Every time we comit any data to our primary db, It would have that replicated in another db. This would be an exact copy of the primary db
  -If we loose our primary db, We would have to manually create a new DNS address for the replicated db.
  -This would be useful in scenarios where the load on primary db is more. to accomodate all the users, The app can be re-configured to pass
  50% of request of primary and the rest on its replicas. Allowing for more requests.
  -We can create upto 5 replicas
  
Non Relational Databases:
They are non structured databases, usually consist of the following:
  1. Collections: They are like tables
  2. Documents: These are rows
  3. Key-Value Pairs: these are columns.

Difference between OLTP and OLAP:
Online Transaction Processing: Will have transaction data.
Online Analytical Processing: It pulls huge number of recs. Like number of products sold in each continent. 

-Its good practice to have different databases for OLTP and OLAP. 

-AWS Redshift is the datawarehouse product of AWS. This provides platform for all OLAP queries. 

BASICS TO REMMEMBER:
****AWS RDS is used for all OLTP requests and comes in 6 flavors(SQL,MySQL,Postgres,Oracle,Aurora &MariadB)****
****DynamoDB is AWS NOSQL solution****
****AWS Redshift is AWS OLAP requests db****
****Elasticache is used to speed up performance of existing databases(frequent identical queries). comes in 2 flavors(redis,Memcached)****

-RDS runs on Virtual Machines.
-You cannot SSH into these RDS instances.
-Amazon is responsible for patching the Db and RDS OS.
-RDS is not serverless(Except of Amazon Aurora).

-------RDS-Backups-Multi AZ-Read Replicas------
There are 2 types of backups:
1. Automated Backups: Allow you to recover db at any point of time within the retention period. RP can between 1 to 35 days.
  -They take full snapshot and also store transaction logs throughout the day.
  -Upon choosing recovery, AWS will select the most recent backup and apply transaction logs relavent to that day.
  -It allows point in time recovery down to second, within the retention period.
  -These are enabled by default.
  -Backup data is stored in S3 and we get free storage space equal to your db size.for ex: if you have RDS of 10GB, you will get storage for 10GB.
  -Backups are taken in a defined time.During backup, storage I/O may be suspended while your data is being backed,experiencing latency.
2. Database Snapshots: These are user initiated backups done manually.
  -They store data even after you delete the original RDS instance, unlike automated backups.
-When you restore either an automation backup of snapshot, the restored version of the database will be a new RDS instance with a new DNS endpoint.

-Encryption atRest: It is supported for MYSQL,Postgres,ORacle, SQL Server, MariaDb and Aurora.It is done using AWS Key Management Service(KMS)
  Once your RDS instance is encrypted, the data stored at rest in the underlying storage is encrypted, as are automated backups, read replicas,
  and snapshots.
  
-Multi AZ: It allows you to have exact copy of your prod db in another AZ.AWS handles replications for you, so when your prod db is written to,
  this write will automatically be sync to the stand by db.
  -In the event of planned maintenance or DB instance failover or an AZ failure, Amazon RDS will automatically failover to the standby so the 
   database operations can resume quickly without admin intervention.
   In this case, Amazon will repoint the db to the DNS. so the DNS endpoint does not change if Multi AZ is enabled.
  -Multi AZ is for DR only not for performance improvement.
 
-Read Replica: It allows you to create read-only copy of your prod db. This is achieved by using async replication from primary RDS instance
  to read replica. You use read replica primarily for heavy read database workloads.
 -They are used for scaling not for DR
 -Must have automated backups turned on in order to deploy a read replica.
 -Can have upto 5 read replica. Can have read replica of read replica but do watchout for latency. 
 -Each RR will have its own DNS endpoint.
 -Can have RR with multi AZ and can also create RR of multi AZ source db.
 -RR can be promoted to be their own db. This would break the replication.
 -Can have RR in another region compared to the source db.
 -Currently THere is no RR for SQL Server.
 
 
----Dynamo DB-----
-It is a fast and flexible NOSQLdb service for apps that need consistent, single digit millisecond latency at any scale.
-It is fully managed db that supports document and key-value data models.
-Its flexible data model and reliable performance makes it great fit for mobile ,web,gaming, ad-tech,IoT and many other apps.
-Its stored in SSD
-Spread across 3 geo distinct data centers
-There are 2 options for reads:
  1. Eventual Consistent Reads(Default):
    -Consistency across all copies of data is usually reached within 1 second. repeating a read after a short time should return updated data.
    -used for best read performance.
    -Enabled by default.
  2. Strong Consistent Reads:
    -Here the data is consistent within 1 second across all copies.



-----RedShift----
-Redshift is a fast and powerful, fully managed, petabyte scale dw service in the cloud.
-Customers can start for 0.25$ per hour with no commitment or upfront costs
-Can scale to petabyte or more for $1,000 per tb per year, less than 10th of most other dw solutions.
-Redshift can be configured as:
  1.Single Node: upto 160GB
  2.Multi-Node:This would consist of a Leader Node to manage client connections and receive queries and a Compute Node to store 
    data and perform queries and computations. we can have upto 128 compute nodes.
-Redshift uses ADVANCED COMPRESSION TECHNIQUES like using columnar data compressions which is better than row-based compressions
  this is because similar data is stored sequentially on disk.
-Redshift does not require indexes or materialized views so uses less space.
-When loading data into a table, Redshift automatically samples your data and selects the most appropriate compression scheme.

-Massively Parallel Processing(MPP): Redshift automatically distributes data and query loads across all nodes.
  -Redshift makes it easy to add nodes to your dw and enables you to maintain fast query performance as your dw grows.
-
    
-------Aurora-------
-It is a MySQL and PostgreSQL compatible  rdb engine that combines the speed and avail of high-end commercial db with the simplicity
  an cost-effectiveness of open source databases.
-It is 5 times better performance than MySQL and 3 times better performance than PostgreSQL at a much lower price point.
-It starts with 10GB, scales in 10GB increaments upto 64TB(Storage Autoscaling)
-Compute resources can scale upto 32 vCPUs and 244 GB of Memory.
-2 copies of your data is contained in each AZ, with minimum of 3 AZ. Giving you 6 copies of your data
- Aaurora is designed to transparently handle the loss of up to 2 copies of data without affecting database write 
  availability and up to three copies without affecting read availibility.
-It is also self-healing. Data blocks and disks are continously scanned for errors and repaired automatically.

-Three types of Aurora Replicas are available:
  1.Aurora Replicas(Currently 15)
  2.MySQL Read Replicas(Currently 5)
  3.PostgreSQL Read Replicas(Currently 1)
  
  Feature                 Amazon Aurora Replicas            MySQL Replicas
  1.No of Replicas              up to 15                      up to 5
  2.Replication Type            Async(millisec)                Async(seconds)
  3.Performance Impact          Low                           HIgh
  on Primary
  4.Replica Loc                 In-Region                     Cross-Region
  5.Act as Failover Target      Yes(No data loss)             Yes(potentially minutes of data loss)
  6.Automated Failover          Yes                           No
  7.Support for user-defined    No                            Yes
    replication delay
  8.Support for different       No                            Yes
    data or schema vs primary
    
Backups with Aurora:
-Automated backups are always enabled on Amazon Aurora DB instances. Backups do not impact db performance.
-You can take snapshots on aurora, it does not impact performance.
-you can share aurura snapshots with other aws accounts

-Amazon Aurora Serverless is an on-demand, autoscaling configuration for the MySQL and PostgresQL compatible editions of 
  Amazon Aurora. 
-An Aurora serverless DB cluster automatically starts up, shuts down and scales capacity up or down based on your app needs.
-Aurora serverless provides a relatively simple, cost effective option for infrequent, intermittent, or unpredictable workloads.



---------Elasticache--------
It is a webservice that makes it eas to deploy, operate and scale an in-memory cache in the cloud.
-The service improves the performance of web applications by allowing you to retrive info from fast, managed, in-memory caches,
  instead of relying entirely on slower disk-based db.
-Elasticache supports 2 types (memcached and redis)

Requirement                             Memcached   Redis
1.Simple Cache to offload DB            Yes         Yes
2.Ability to scale horizontally         Yes         Yes
3.Multi-threaded performance            Yes         No
4.Advanced data types                   No          Yes
5.Ranking/sorting data sets             No          Yes
6.Pub/Sub capabilities                  No          Yes
7.Persistence                           No          Yes
8.Multi-AZ                              No          Yes
9.Backup &Restore Capabilities          No          Yes

***Use Elasticache to increase db and web app performance***






