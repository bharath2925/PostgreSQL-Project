---DNS---
-Route53 is the DNS service of AWS. DNS is on the port 53 so this is called as Route53.
-DNS is like a phonebook. It is used to converty human friendly domain names into an internet protocol(IP) address.
-IP address are used by computers to identify ea on the network. It commonly comes in 2 forms IPv4 and IPv6.
-IPv4 addresses are running out. IPv4 is a 32 bit field and has over 4 billion different addresses.
-Due to more number of devices connected, IPv6 was created with 128 bits of address space having about 340 x10 pow(36) different
  addresses.
-Looking at common domain names like google.com,bbc.co.uk etc. you will notice strings separated by dots. 
-The last work in a domain name is the top level domain. for ex: .co.in here in is top level domain..co is second level domain name.
-These domain names are controlled by Internet Assigned Numbers Authority(IANA).

-Bcoz all of the names in a given domain name have to be unique there needs to be a way to organize this all so that domain names aren't
  duplicated.
-This is where domain registrars come in, A registrar is an authority that can assign domain names directly under one or more top-level
  domains.
-These domains are registered with InterNIC(Network Information Center), a service of ICANN(Internet Corporation for Assigned Names and Numbers)
--ICANN enforces uniqueness of domain names across the internet.
-Each domain name becomes registered in a central database known as WhoIS database.
-Popular domain registrars inclues Amazon, GoDaddy.com,123-reg.co.uk etc.

-When you buy a dns. You will be given a Start of Authority Record(SOA). It stores info about:
  1.Name of server that supplied the data for the zone.
  2.The admin of the zone.
  3.The current version of the data file.
  4.The default number of seconds for the time-to-live file on resource records.

-NS Records: Thet are Name Server Records. They are used by top level domain servers to direct traffic to content DNS server which
  contains the authoritative DNS records.
  For ex: If a user tries to query a website. The Top Level Domain is queried first with the url, The TLD will share the 
  NS of the url. Then the NS Records database is queried to get the SOA. In SOA we will have our DNS records.
  
-"A" Record is a fundemental type of DNS record. The "A" in A Record stands for "Address". 
  The A record is used by computer to translate the name of the domain to an IP address.

-TTL(Time to Live): The length that a DNS record is cached on either the resolving server or the user own local PC is equal
  to the value of TTL in seconds. The lower the TTL, the fast changes to DNS records take to propagate throughout the internet.
  -The default TTL is 48 hrs meaning, If i make a change to the DNS it will take 48 hrs for the change to take place across internet.
  
  
-CName: It is a Canonical Name that can be used to resolve one domain name to another.
  for ex: you may have a mobile website with the domain name m.A.com that is used for when user browse to your domain name on their mobile. 
   You may also want the name mobile.A.com to resolve to this same address.

-Alias Records: They are used to map resource record sets in your hosted zone to Elastic Load Balancers, CF distributions or
  s3 buckets that are configured as websites.
 -Alias records work like CNAME record in that you can map one DNS name to another target DNS name.
-There is a key difference though, A CNAME cant be used for naked domain names(aka zone apex record).You cant have a CNAME
  for http://acloud.guru, it must be either an A record or an Alias.
  
***ELB don have pre-defined IPv4 add.you resolve to them using a DNS name.
***Understand the difference between an Alias record and CNAME.
***Given a choice, always choose an Alias record over CNAME.
***Common DNS Types:
  1.SOA Records
  2.NS Records
  3.A Records
  4.CNAMES
  5.MX Records(Mail Exchanger used for mails)
  6.PTR Records(reverse of A record used to find the name using IP address)

***You can buy domain names directly with AWS.
***It can take upto 3 days to register depending on the circumstances.

Health checks can be configured on R53. We can give the path of the function to check. for ex index.html can be checked.
  We can se health checks on individual record sets.
  If a record set failes a hc.it will be removed from r53 until it passes the hc.
  YOu can set SNS notifications to alert you if a health check is failed.
 We can create hc in the hc section and associate the hc while creating a record set.
  
---Routing policies on Route53----
1. Simple Routing: You can have only 1 record with multiple IP. If you specify multiple values in a record, R53 returns all values
   to the user in a random order.
   For Ex: If we create a domain in R53 pointing to 3 ip addresses(here ec2), We can configure ttl for the domain where until tha
   time the local web browser would have cached that ip address. after the ttl the browser can receive another ip from the 3 configured.
   **Simple Routing Policy means you have only one record in your DNS and it has multiple IP addresses.***

2.Weighted Routing:It allows you to split your traffic based on different weights assigned. For ex: You can set 10% of your traffice
  to US-east1 and 90% to west1 
  
3.Latency-based Routing:It allows you to route your traffic based on the lowest network latency for your 
  end user(ie which region will give them the fastest response time)
  -To use latency based routing, you create a latency resource record set for the Amazon EC2 or ELB resource in each region that hosts your website.
  -When R53 receives a request for your site, it selects the laency resource record set for the region that gives the user the lowest latency.
  -R53 then responds with the value associated with that resource record set.

4.Failover Routing:It is used when you want to create an active/passive set up. Fo ex:you may want your primary site to be in 
  EU-West-2 and your secondary DR site in AP-Southeast-2. R53 will monitor the health of your primary using hc.
  -the hc monitors the health of your end points.If there is a failover on primary, R53 will automatically point the domain to the
  DR site.
  -We dont need to necessarily create hc for secondary site.
  
5.Geolocation Routing:It lets you choose where your traffic will be sent based on the geo location of your users(ie the location f
  from which DNS queries originate).
 -You might want all queries from Europe to be routed to a fleet of EC2 that are specifically configured for your EU customers.
 -These servers may have the local language of your EU customers and all prices are displayed in Euros.etc etc
 -If you want to really track the geo users to specific servers, then use this.
 ***IF you stop and start an EC2, The IPv4 addresses gets changed.
 
6.Geoproximity Routing(Traffic Flow Only):It lets R53 route traffic to your resources based on geo location of your users and
  your resources.
  -You can also optionally choose to route more traffic or less to a give resource be specifying a value, known as bias.
  -A bias expands or shrinks the size of the geo region from which traffic is routed to a resource.
  -***To use Geoproximity Routing, You must use Route 53 Traffic Flow***
  -We first need to create a traffic flow.
  -Not in solutions architect exam syllabus.

7. Multivalue Answer Policy:
It lets you configure Amazon R53 to return multiple values, such as IP addresses for your web servers, in response to the DNS queries.
-You can specify multiple values for almost any record, but multivalue answer reouting also lets you check the health of 
  each resource so R53 returns only values for healthy resources.
-This is similar to simple routing however it allows you to put health checks on each record set.









  
  
  
  
