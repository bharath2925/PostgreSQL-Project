---------EC2----------
- EC2 is a web service that provides resizable compute capacity in cloud.
It provides resizable compute capacity in cloud.
EC2 reduces the time required to obtain and boot new server instance to minutes
Can change properties based on your computing requirements change.

Pay as you go
Pay less as you use more.

EC2 Pricing Models:(Remmember everything)
- On Demand: Pay a fixed rate by the hour with no commitment.
  -Useful for:
  1. Users who want low cost and flexibility of EC2 without any up-front payment or long term commitment.
  2. Apps with short term, spiky or unpredictible workloads that cannot be interrupted.
  3. Apps developed or tested in EC2 for the first time.
- Reserved: Provides you with a capacity reservation and significant discount on hourly charge for an instance. Contract can be 1 year or 3 years
  -Useful for:
  1. Apps with steady state or predictible usage.
  2. Apps that require reserved capacity
  3. Users able to make upfront payment to reduce their computing costs even further.
  
  Types:
  1. Standard Reserve Instance: 75% off on demand instances. Cant convert one instance to another.
  2. Convertible Reserved Instances: Upto 54% off on demand capability to change the attributes of Reserved Instance. Can convert to another instance when required.
  3. Scheduled Reserved Instance: Can launch within the time window you reserve.
- Spot Instance: We can bid whatever price you want for your instance. we get the server if we win the bid else we will loose it in 2 minutes.
  -Useful for:
  1. Apps with flexible start and end times.
  2. Apps that are feasible at very low compute prices.
  3. Users with urgent computing needs for large amounts of additional capacity
- Dedicated Hosts: Physical EC2 servers in your work space.
  - Useful For:
  1. For users having regulatory requirements that may not support multi-tenant virtualization
  2. Great for licensing which does not support multi tenancy or cloud deployments.
  3. Can be purchased on-Demand(Hourly).
  4. Can be purchased as reservation for upto 70% off the on demand price.

***Read all the Instance Types using the Mnemonic provided*** They wont ask it in the associate exam though***

***If the Spot Instance is terminated by Amazon EC2, You will not be charged for partial hour of usage.
If you terminate, You will be charged for any hour in which the instance ran***


-------EC2 Lab----------
1. Go to EC2 console.
2. Create Instance
3. Select the instance you need and select configure instance details.
4. AFter configuring instance details, Select storage options. Remmember, For root, the Volume type can be only SSD or Magnetic.
When we add new volume, We can see additional volume types.

***


--SEcurity Groups---
***Every time you make a change in the inbound rule or any other changes, The changes are effective immediately.***
-If you create a inbound rule for any type of request, AWS will automatically create an outbound rule for the same request. This functionality
is called as statefull
-We can block specific requests type to the SG. and we cannot block a specific IP address in SG
-When we create a security group. It automatically blocks all inbound traffic. We have to add inbound rules to allow the specific requests.
-All outbound traffic is allowed.
-We can add more than 1 sg to an EC2 Instance. This can be done by Actions->Change SG->select the SG you want


------AWS EBS--------
Provides persistent block storage volumes for use with Amazon EC2 instance in the AWS cloud.
Each EBS volume is automatically replicated within its AZ to protect you from Component failure, offering high avail and durab

Comes in 5 flavors:
1. General Purpose SSD: Balances price and performance for a wide variety of transactional workloads>
  -Usecases: Most Work Loads
  -API Name: gp2
  -Volume Size: 1GB-16TB
  -IOPS: 16000
2. Provisioned IOPS(SSD): Highest performance SSD volume designed for mission critical apps
  -Usecases: Databases
  -API Name: io1
  -Volume Size: 4GB-16TB
  -IOPS: 64,000
3. Throughput Optimized HDD: Low cost HDD designed for frequently accessed throughput intensive workloads.
  -Usecases: Big Data and Data Warehouses
  -API Name: st1
  -Volume Size: 500GB-16TB
  -IOPS: 500
4. Cold HDD: Lowest cost HDD vol designed for less frequently accessed workloads
  -Use Cases: File Servers
  -API Name: sc1
  -Volume Size: 500GB-16TB
  -IOPS: 250
5. EBS Magnetic: Previous Generation HDD
  -Usecases: Workloads where data is infrequently accessed
  -API Name: Standard
  -Vol Size: 1GB-1TB
  -IOPS: 40-200

-----EBS volumes and Snapshots-----
--Whereever our EC2 instance is, The volume will always be in the same AZ.


-----AMI Types----
AMI can be selected based on:
1. Region
2. OS
3. Architecture(32/64)
4. Launch Permissions
5. Storage for the root device


There are 2 types of AMI's:
1. Instance Store(Ephemeral Storage)
2. EBS Backed Volumes

-All AMI's are categorized as either Backed by Amazon EBS or Backed by Instance Store
For EBS Volumes: The root device for an instance launced from the AMI is an Amazon EBS volume created from an Amazon EBS snapshot.
For Instance Store Volumes: The root device from an instance launched from the AMI is an instance store volume created from a 
template store in S3.

*Instance store volumes cannot be stopped, If the underlying host failes, you will start loosing data.*
*EBS backed instances can be stopped, you will not loose data on this instance if stopped.*
*You can reboot both, You will not loose data*
*By default, both root volumes will be deleted on termination, however we can stop this on EBS but not in instance type


----ENI vs ENA vs EFA---------
1. ENI(Elastice Network Interface): Essentially a virtual network card present in your EC2 instance.
  It allows:
  1.A primary ipv4 from your VPC range.
  2.one or more secondary ipv4 from the ipv4 address range on your vpc.
  3.one elastic ipv4 per private ipv4
  4. one public ipv4
  5. one or more ipv6
  6. one or more security group.
  7. a mac address
  8. source/destination check flag
  9. description
  
  Scenarios for ENI:
  -Used for Basic Computing
  -If you need separate management network for your production or a separate logging network at low cost. Use ENI
  -To create a management network
  -Use network and security appliances in your vpc
  -create dual homed instances with workloads/roles on distinct subnets.
  -Create a low budge high availability solution.
2. EN(Enhanced Networking): Uses SR-IOV(Single Root I/O Virtualization) to provide high performance networking capabilities on supported 
  instance types.
 -Some times ENI's are not capable of network throughput you need to do more intense workloads, Thats where we can use Enhanced Networking
 -SR-IOV is a method of device virtualization that provide higher I/O performance using less CPU utilization compared to traditional VNI
 -EN provides higher bandwidth, HigherPSS(Packet per sec) Performance and consistently lower inter-instance latencies.
 -There is no additional charge for using EN.
 -Use it where you want good network performance.
 ENI can be enabled by:
  1.ENA(Elastic Network Adapter): Which supports network speeds upto 100GBps for supported instance types.
  2.Inter 82599 Virtual Function(VF): Which supports network speeds upto 10GBps for supported instance types.This is typically used in older
    instances.
   **In any scenario We should choose ENA over VF**
3.EFA(Elastic Fabric Adapter): A network device that you can attach to your EC2 to acclerate High performance Computing(HPC) and ML Apps.
  -EFA provides lower and more consistant latency and higher throughput than the TCP transport traditionally used in cloud-based HPC systems.
  -EFA can use OS-Bypass. OS-Bypass enables HPC systems and ML apps to bypass the OS kernel and to communicate directly with the EFA device.
  This makes it lot faster with low latency.Not supported in Windows. Only in Linux


-----Encrypted Root Device Volumes and Snapshots------
-RDV is the HD that has the OS. Here its the EBS volume. Initially we cannot encrypt the root device.
-New feature of EBS allows you to encrpyt your root volume while initiating the instance. This is avaiable in the option of add storage.

-To encrypt a root device for a launced EC2 instance:
  1. From the volumes, Select the root volume of your instance and create a snapshot of this storage.
  2. Once the snapshot is created, We copy the snapshot. Here we have an option to encrypt this root device. We need to provide keys for it.
  3. Once the snapshot is created, We then create an AMI with this snapshot. Once the snapshot is created, We can use this AMI to launch
  Encrypted EC2 instances.
  **We cannot create an non encrypted EC2 instance using an Encrypted snapshot/AMI.**
  **Snapshots of encrypted volumes are encrypted automatically**
  **You can share snapshots, but only if they are unencrypted**
  **The unencrypted snapshots can be shared with other AWS accounts or made public**
  
-----CloudWatch------
-Amazon Cloudwatch is a monitoring service to monitor your AWS resources, as well as the app that you run on AWS.
-CW monitors performance. It can monitor things like:
  1.Compute:
    -EC2:Monitors events every 5 minutes by default.
      -Host level metrics consist of:
        1.CPU
        2.Network
        3.Disk
        4.Status Check
    -Autoscaling Groups
    -Elastic Load Balancers
    -Route53 Health Checks
  2.Storage and Content Delivery:
    -EBS Volumes
    -Storage Gateways
    -CloudFront
    
-AWS CloudTrail: Increases visibility into your user and resource activity by recording AWS management console actions and API calls.
  you can identify which users and acc called AWS, the source IP address from which the calls were made and when the calls occurred.

****CloudWatch monitors Performance****
****Cloudtrail monitors API calls in the AWS platform****
****Cloudwatch is all about performance. Cloudtrail is all about auditing****
*Standart Monitoring = 5 mins default
*Detailed Monitoring =  1min default
Things to do in Cloudwatch:
1. Dashboards: Create awesome dashboards to see what's happening.
2.Alarms: Can set alarms which will notify when particular thresholds are hit.
3. Events: CW Events helps to respond to state changes in your AWS resources.
4. Logs: CW Logs helps you to aggregate, monitor and store logs.


-----AWS Command Line-----
a CLI to interact with AWS from anywhere in the world
Once we create a EC2 instance, We can enter the CLI through connect. 
Once we are in the CLI. WE  can go to root access using sudo su
Here we can get into the AWS CLI by using:
aws service_name linux function. For ex:
to list all s3 buckets: aws s3 ls

We need to configure the CLI to access all the AWS resources present in it.This can be done by:
1. typing aws configure
2. Provide the ACCess Key ID and AWS secret access key. This is provided in IAM. When we create an User, We can download an accesskey.csv
This would have all the above details.
3. The region needs to be mentioned as us-east-1
4. By providing all these info, We are saying the CLI that we are trying to access the CLI of this EC2 using the User access created in 
IAM. 

By following the above steps, We can access all the AWS resources present. 
-CLI is global. This can be accessed even from other region.
-To create a new s3 bucket we can type:
aws s3 mb s3://bucket_name
Remmember, Bucket names are global.

--We can go to root dir. cd ~ we can see a hidden folder named aws. it can be accessed by cd .aws
Here we will have the credentials which we stored. by doing nano credentials, we can see all the access key and access hidden keys we 
provided earlier.
-As this would be a security issue, Amazon always suggests to use a role based access using IAM.
***Commands wont be asked in the exam***
***many documentations are available to get the aws commands***

------IAM Roles--------
-Roles are not just used from EC2 but for every resource in AWS.
-Roles are more secure than storing your access key in individual EC2
-Roles are easier to manage if we have 100+ EC2
-Roles can be assigned to an EC2 after its created using both CLI and console.
-Roles are universal, You can use then in any region.


------BootStrap Scripts--------
-Bootstrap scripts are aws cli scripts which can be configured while creating a new ec2.
-Here we can add all the awsl cli scripts which we would need to execute once a new instance is created.
-Sample tasks can be to update all the aws libraries, install apache to make it a webserver etc.
-sample command below:
#!/bin/bash
yum update -y
yum install httpd -y
service httpd start
chkconfig httpd on
cd /var/www/html
echo "<html><h1>Hello World</h1></html>" >index.html
aws s3 mb s3://bharath2925acl
aws s3 cp index.html s3://bharath2925acl

------Instance Metadata-------
-We can check the bootstrap scripts which we gave while creating the ec2 instance(above steps) using this command in cli:
curl http://169.254.169.254/latest/user-data
The ip above is common for all bootstrap scripts
-To get all the meta-data used for this instance we can query, curl http://169.254.169.254/latest/meta-data
Here we will get a list of all options which we can view.
--Metadata is used get info about the instance
--user-data will contain the bootstrap scripts which we executed while creating the ec2.

--------EFS------------
EFS(Elastic File System):It is a file storage service for Amazon EC2. EFS is easy to use and provides a simple interface 
that allows you to create and configure file systems quickly and easily. With EFS, storage capacity is elastic, growing and shrinking
automatically as you add and remove files, so your app have the storage they need,when they need it.
-The advantage of EFS over EBS is that EBS cannot be shared across multiple ec2. But EFS can be shared.
-EFS is available under storage. We first need to create an EFS.
-Lifecycle policies are available in EFS where we can push the inaccessed files to EFA IA(Infrequent Access) storage class. which 
is cheaper
-While creating EFS, We can create the EFS under default SG and if we have EC2 instances using another SG. We can go to the default SG
and add inbound rule to allow NFS(Network File System) to allow from the default SG. In the source section while adding a inbound rule,
We can type sg to select our SG which is used in our EC2.
-Once we create the EFS. We log into existing ec2 cli. enter the following command: mount -t efs -o tls fs-e2365f62:/ /var/www/html
This would mount our efs with name(fs-e2365f62) to the /var/www/html location. This needs to be done on both the ec2 instances.
Once this is done, We can see that if we log into another ec2 using the same sg. We can see all the updates made from EC2-1 here in EC2-2.

***EFS supports NFS version 4(NFSv4)protocol.
**Only pay for the storage you use. No pre-provisioning reqd.
**Can scale upto petabytes
**Can support 1000 of concurrent NFS connections
**Data is stored across multiple AZ within a region.
**We have read after write consistency while writing in NFS.


-----Amazon FSx for Windows & Amazon FSx for Lustre--------
Amazon FSx windows File server:It provides a fully managed native Microsoft Windows file system so you can easily move your 
windows-based app that require storage to AWS.Amazon FSx is built on Windows Server.
-Its designed to work with Microsoft applications

-How FSx is different from EFS:
1.FSx is a managed Windows Server that runs Windows Server Message Block(SMB)-based file services. EFS is NAS filer for EC2
2.Designed for Windows and Windows apps.
3.Supports Active Directory(AD) users, access control lists, groups and security policies along with Distributed File system(DFS)
namespaces and replication.
***Amazon do not support EC2 that are running windows to connect EFS. Its linux only***

Amazon FSx for Lustre: Its a fully managed file system that is optimized for compute-intensive workloads, such as high-performance
computing(HPC),ML,Media data processing workflows and electronic design automation(EDA).

With FSx, you can launch and run a lustre file system that can process massive datasets at upto 100 GBps of throughput, Millions of IOPS
and sub millisecond latencies.

Exam Tips:
->We use EFS: when you need distributed, highly resilient storage for linux instances and linux based apps
->We use Amazon FSx for Windows: When you need centralised storage for windows based apps such as sharepoint, sql server, workspaces,
IIS, webserver or any other native microsoft apps.
->Amazon FSx for Lustre: When you need high-speed, high-capacity distributed storage. This will be for apps that do HPC, financial 
modelling etc.
FSx for Lustre can directly store data in S3.


-------EC2 Placement Groups-------
Its a way of placing your EC2 instances

There are 3 types of PG:
1. Clustered PG: Grouping of instances within single AZ. Used for apps with low network latency, high network throughput.
  Only certain instances can be launched in Clustered PG
2. Spread PG: They are instances placed on distinct underlying hardware. used for apps that have small no of critical instances that should be kept
  separate from each other. Think it like each EC2 is placed in individual racks. across same of different AZ. 
  -Ideal for placing Individual Critical EC2
3. Partitioned PG:EC2 divides each group into logical segments called partitions. EC2 ensures that each partition within a placement group has its own 
  set of racks. Each rack has its own network and power source.
  -No 2 partitions within a same PG share the same racks, allowing you to isolate the impact of hardware failure within your app.
  -*The main difference between Spread PG and partitioned PG is that in Partitioned PG, we can have multiple instances under a single
  rack. In Spread PG, Single EC2 is placed in single racks without any partitions.
  -Ideal for Multiple EC2 instances like HDFS,HBase and Cassandra.

***Clustered PG cant spam multiple AZ, Spread and Partitioned group can but still have to be in the same region***
***The name you specify for a PG must be unique within your AWS account***
***Only certain types of instances can be launched in PG(Compute Optimized, GPU, Memory Optimized, Storage Optimized)***
***AWS recommends homogenous instances within clustered PG***
***You cant merge PG***
***You can move existing instances into a PG.before you move, the instance must be in stopped state***
***You can move or remove an instance using AWS CLI or an AWS SDK, You cant do it via the console***


-------AWS WAF(Web Application Firewall)--------
-Allows you to monitor HTTP/HTTPS requests that are forwarded to AWS cloudfront, App Load Balancer or API Gateway
-AWS WAF also lets you control access to your content. Its a layer 7 firewall.
-You can configure conditions such as what IP are allowed to make requests or what query string parameters need to be passed for the request
  to be allowed.
-The application load balancer or CloudFront or API Gateway will either allow this content to be received or give a HTTP 403

At most basic level AWS WAF allows 3 different behaviours:
  1. Allow all request except the onces you specify.
  2. Block all requests except the ones you specify.
  3. Count the requests that match the properties you specify.

WAF Protection: WAF provides extra protection against web attacks using conditions you specify.You can define conditions by using chara-
  cteristics of web req such as:
   1.IP addresses that requests originate from.
   2.Country that requests originate from.
   3.Values in the request headers.
   4.Strings that appear in requests, either specific strings or string that match regex patterns.
   5.Length of requests.
   6.Presence of SQL code that is likely to be malicious.(SQL Injection)
   7.Presence of a script that is likely to be malicious(Cross-site scripting).
***We can also use Network ACL's to block malicious IP address. This is covered in VPC section***





