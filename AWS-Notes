AWS Solutions Architect Certification Notes:

-IAM(Identity Aceess Management):
Allows you to manage users and their level of access to the AWS console.

1. Centralised control of aws acc
2. shared access 
3. Granular Permissions
4.Identity Federation(Allows users to access the AWS using theirLinkedIn or FB creds)
5. Multifactor Authentication
6. Provides Temporary Access
7. Own Password Rotation Policy
8. Supports PCI DSS Compliance(All Personal Data is secured)


Key Terms in IAM:
1. Users: End users such as people, employees etc
2. Groups: A collection of Users. Each user in the group will have specific permissions assigned to that group
3. Policies: Made up of docs. Formatted in JSON.Gives permissions on what the user/group is able to do
4. Roles: Create roles for each user which provides access for each stack in AWS. For ex we can request role access to a EC2 console to write files in the S3 bucket.

Root Account: The credentials you used to login in the first time. This creds will have god mode access
Whatever changes we do in the IAM it will be implemented on the global basis. 
NEW USERS WILL HAVE NO PERMISSIONS WHEN FIRST CREATED.
NEW USERS are assigned Access Key ID and Secret Access Keys when first created. 
The Access Key ID and Secret Access Keys are not Id and Password. We can access AWS via the API and command line.
ALWAYS SETUP MULTIFACTOR AUTHENTICATION for your root account.(Google Authenticator App)

Hands On:
1. First always to Enable Multi Factor Authentication. Install Google Authenticator in the phone, scan the barcode and enter the MFA code 2 times(after first one expires). 
2. Need to add user in the IAM role. This can be customized to provide programatic access or use a custom password.
Once the custom password is created, We can download the credentials.csv file which would have all the credentials needed for your IAM Role.
3. Next we need to provide permissions. We can start by creating a Group. Upon providing a name to the group we can see we can add policies to the group.
Few policies are AWS managed Policies which covers almost all the access policies based on the role.
4. Once the policies are added to the group. The user is already added to the group. So the user will have all the access mentioned in the policies for that group.
5. Lastly we need to setup IAM Password Policy. This includes the length of password, Frequency to change the password etc.

Major point to remmember is never to share the access key id and secret access key with anyone. This would give access to the complete AWS console using these credentials.

Finally we need to assign roles. This givess access to a AWS service to access another AWS service. We can go to role, Add role, Select the service for which you want access.
For ex EC2, and provide a policy for this role(Here We can give S3FullAccess(AWS Managed policy) to give the EC2 complete access to the S3 bucket)
